{"ast":null,"code":"import { doc, getDoc, getDocs, setDoc, updateDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nconst db = Firebase.db;\nexport default {\n  receive_radar_data() {\n    const docRef = collection(db, 'iidxRadarData');\n    getDocs(docRef).then(documentSnapshot => {\n      documentSnapshot.docs.forEach(doc => {\n        console.log('Document data:', doc);\n      });\n    });\n  },\n  receive_user_data(uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:', documentSnapshot.data());\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_user_data(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        updateDoc(docRef, data).then(() => {\n          console.log(\"Document successfully update!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        setDoc(docRef, data).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["doc","getDoc","getDocs","setDoc","updateDoc","Firebase","db","receive_radar_data","docRef","collection","then","documentSnapshot","docs","forEach","console","log","receive_user_data","uid","exists","data","send_user_data","catch","error"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { doc, getDoc, getDocs , setDoc, updateDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    receive_radar_data() {\r\n        const docRef = collection(db, 'iidxRadarData');\r\n        getDocs(docRef).then((documentSnapshot) => {\r\n            documentSnapshot.docs.forEach((doc) => {\r\n                console.log('Document data:', doc);\r\n            });\r\n        });\r\n    },\r\n\r\n    receive_user_data(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:', documentSnapshot.data());\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_user_data(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                updateDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully update!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            } else {\r\n                setDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAGC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAC7E,OAAOC,QAAQ,MAAM,kCAAkC;AAEvD,MAAMC,EAAE,GAAGD,QAAQ,CAACC,EAAE;AAEtB,eAAe;EACXC,kBAAkBA,CAAA,EAAG;IACjB,MAAMC,MAAM,GAAGC,UAAU,CAACH,EAAE,EAAE,eAAe,CAAC;IAC9CJ,OAAO,CAACM,MAAM,CAAC,CAACE,IAAI,CAAEC,gBAAgB,IAAK;MACvCA,gBAAgB,CAACC,IAAI,CAACC,OAAO,CAAEb,GAAG,IAAK;QACnCc,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEf,GAAG,CAAC;MACtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAEDgB,iBAAiBA,CAACC,GAAG,EAAE;IACnB,MAAMT,MAAM,GAAGR,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEW,GAAG,CAAC;IACvChB,MAAM,CAACO,MAAM,CAAC,CAACE,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACO,MAAM,EAAE,EAAE;QAC3BJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,gBAAgB,CAACQ,IAAI,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EAEDK,cAAcA,CAACD,IAAI,EAAEF,GAAG,EAAE;IACtB,MAAMT,MAAM,GAAGR,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEW,GAAG,CAAC;IACvChB,MAAM,CAACO,MAAM,CAAC,CAACE,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACO,MAAM,EAAE,EAAE;QAC3Bd,SAAS,CAACI,MAAM,EAAEW,IAAI,CAAC,CAClBT,IAAI,CAAC,MAAM;UACRI,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAChD,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;UACdR,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV,CAAC,MAAM;QACHnB,MAAM,CAACK,MAAM,EAAEW,IAAI,CAAC,CACfT,IAAI,CAAC,MAAM;UACRI,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;UACdR,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}