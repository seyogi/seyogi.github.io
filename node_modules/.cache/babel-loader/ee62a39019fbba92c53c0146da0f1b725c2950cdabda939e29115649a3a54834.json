{"ast":null,"code":"import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nimport iidxRadarJson from '../../assets/iidxRadar.json';\nconst db = Firebase.db;\nexport default {\n  data() {\n    return {\n      iidxRadarScore: iidxRadarJson\n    };\n  },\n  calc_radarScore(diff, userData, radarData) {\n    var maxScore = radarData[diff][\"ノート数\"] * 2;\n    delete radarData[\"ノート数\"];\n    Object.entries(radarData[diff]).forEach(([key, value]) => {\n      radarData[diff][key] = value * (userData[diff] / maxScore);\n    });\n    return radarData[diff];\n  },\n  receive_radarData() {\n    this.iidxRadarScore = iidxRadarJson;\n  },\n  receive_userData(uid) {\n    const docRef = doc(db, 'userData', uid);\n    var diffValues = [[\"HYPER\"], [\"ANOTHER\"], [\"LEGGENDARIA\"]];\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:');\n        //var temp_data = {}\n        Object.entries(documentSnapshot.data()).forEach(([key, value]) => {\n          if (this.iidxRadarScore[value[\"TITLE\"]] != undefined) {\n            //曲名があるか\n            diffValues.forEach(function (diffValue) {\n              console.log(diffValue);\n              console.log(typeof diffValue);\n              console.log([diffValues[0]]);\n              console.log(typeof [diffValues[0]]);\n              console.log(this.iidxRadarScore[value[\"TITLE\"]][diffValue]);\n              if (this.iidxRadarScore[value[\"TITLE\"]][diffValue] != undefined) {\n                //難易度があるか\n                console.log(key);\n                var temp = this.calc_radarScore(diffValue, value, this.iidxRadarScore[value[\"TITLE\"]]);\n                console.log(temp);\n              }\n            });\n          }\n        });\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_userData(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        updateDoc(docRef, data).then(() => {\n          console.log(\"Document successfully update!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        setDoc(docRef, data).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["doc","getDoc","setDoc","updateDoc","Firebase","iidxRadarJson","db","data","iidxRadarScore","calc_radarScore","diff","userData","radarData","maxScore","Object","entries","forEach","key","value","receive_radarData","receive_userData","uid","docRef","diffValues","then","documentSnapshot","exists","console","log","undefined","diffValue","temp","send_userData","catch","error"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\nimport iidxRadarJson from '../../assets/iidxRadar.json';\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    data() {\r\n        return { \r\n            iidxRadarScore: iidxRadarJson,\r\n        }\r\n    },\r\n\r\n    calc_radarScore(diff, userData, radarData) {\r\n        var maxScore = radarData[diff][\"ノート数\"] * 2;\r\n        delete radarData[\"ノート数\"];\r\n        Object.entries(radarData[diff]).forEach(([key, value]) => {\r\n            radarData[diff][key] = value * (userData[diff] / maxScore)\r\n        })\r\n        return radarData[diff]\r\n    },\r\n\r\n    receive_radarData() {\r\n        this.iidxRadarScore = iidxRadarJson;\r\n    },\r\n\r\n    receive_userData(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        var diffValues = [[\"HYPER\"], [\"ANOTHER\"], [\"LEGGENDARIA\"]];\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:');\r\n                //var temp_data = {}\r\n                Object.entries(documentSnapshot.data()).forEach(([key, value]) => {\r\n                    if (this.iidxRadarScore[value[\"TITLE\"]] != undefined){ //曲名があるか\r\n                        diffValues.forEach(function (diffValue) {\r\n                            console.log(diffValue)\r\n                            console.log(typeof diffValue)\r\n                            console.log([diffValues[0]])\r\n                            console.log(typeof [diffValues[0]])\r\n                            console.log(this.iidxRadarScore[value[\"TITLE\"]][diffValue])\r\n                            if (this.iidxRadarScore[value[\"TITLE\"]][diffValue] != undefined) { //難易度があるか\r\n                                console.log(key)\r\n                                var temp = this.calc_radarScore(diffValue, value, this.iidxRadarScore[value[\"TITLE\"]])\r\n                                console.log(temp)\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                );\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_userData(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                updateDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully update!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            } else {\r\n                setDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}