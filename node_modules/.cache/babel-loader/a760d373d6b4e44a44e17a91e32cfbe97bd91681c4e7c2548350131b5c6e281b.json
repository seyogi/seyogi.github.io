{"ast":null,"code":"import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nimport iidxRadarJson from '../../assets/iidxRadar.json';\nconst db = Firebase.db;\nexport default {\n  data() {\n    return {\n      iidxRadarScore: iidxRadarJson\n    };\n  },\n  receive_radarData() {\n    this.iidxRadarScore = iidxRadarJson;\n  },\n  receive_userData(uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:');\n        //var temp_data = {}\n        Object.entries(documentSnapshot.data()).forEach(([key, value]) => {\n          console.log(value[\"TITLE\"]);\n          console.log(key);\n        });\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_userData(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        updateDoc(docRef, data).then(() => {\n          console.log(\"Document successfully update!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        setDoc(docRef, data).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["doc","getDoc","setDoc","updateDoc","Firebase","iidxRadarJson","db","data","iidxRadarScore","receive_radarData","receive_userData","uid","docRef","then","documentSnapshot","exists","console","log","Object","entries","forEach","key","value","send_userData","catch","error"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\nimport iidxRadarJson from '../../assets/iidxRadar.json';\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    data() {\r\n        return { iidxRadarScore: iidxRadarJson, }\r\n    },\r\n    receive_radarData() {\r\n        this.iidxRadarScore = iidxRadarJson;\r\n    },\r\n\r\n    receive_userData(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:');\r\n                //var temp_data = {}\r\n                Object.entries(documentSnapshot.data()).forEach(([key, value]) => {\r\n                    console.log(value[\"TITLE\"])\r\n                    console.log(key)\r\n                }\r\n                );\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_userData(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                updateDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully update!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            } else {\r\n                setDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACnE,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AAEvD,MAAMC,EAAE,GAAGF,QAAQ,CAACE,EAAE;AAEtB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MAAEC,cAAc,EAAEH;IAAe,CAAC;EAC7C,CAAC;EACDI,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,cAAc,GAAGH,aAAa;EACvC,CAAC;EAEDK,gBAAgBA,CAACC,GAAG,EAAE;IAClB,MAAMC,MAAM,GAAGZ,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEK,GAAG,CAAC;IACvCV,MAAM,CAACW,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7B;QACAC,MAAM,CAACC,OAAO,CAACL,gBAAgB,CAACP,IAAI,EAAE,CAAC,CAACa,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;UAC9DN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC,OAAO,CAAC,CAAC;UAC3BN,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;QACpB,CAAC,CACA;MACL,CAAC,MAAM;QACHL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EAEDM,aAAaA,CAAChB,IAAI,EAAEI,GAAG,EAAE;IACrB,MAAMC,MAAM,GAAGZ,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEK,GAAG,CAAC;IACvCV,MAAM,CAACW,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BZ,SAAS,CAACS,MAAM,EAAEL,IAAI,CAAC,CAClBM,IAAI,CAAC,MAAM;UACRG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAChD,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;UACdT,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV,CAAC,MAAM;QACHvB,MAAM,CAACU,MAAM,EAAEL,IAAI,CAAC,CACfM,IAAI,CAAC,MAAM;UACRG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;UACdT,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}