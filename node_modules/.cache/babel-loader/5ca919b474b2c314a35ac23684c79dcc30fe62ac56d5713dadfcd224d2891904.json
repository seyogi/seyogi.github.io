{"ast":null,"code":"import { doc, getDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nconst db = Firebase.db;\nexport default {\n  receive_data(uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:', documentSnapshot.data());\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_data(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        setDoc(docRef).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        docRef.update(data);\n      }\n    });\n  }\n};","map":{"version":3,"names":["doc","getDoc","Firebase","db","receive_data","uid","docRef","then","documentSnapshot","exists","console","log","data","send_data","setDoc","catch","error","update"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { doc, getDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    receive_data(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:', documentSnapshot.data());\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_data(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                setDoc(docRef)\r\n                .then(() => {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n            } else {\r\n                docRef.update(data);\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,OAAOC,QAAQ,MAAM,kCAAkC;AAEvD,MAAMC,EAAE,GAAGD,QAAQ,CAACC,EAAE;AAEtB,eAAe;EACXC,YAAYA,CAACC,GAAG,EAAE;IACd,MAAMC,MAAM,GAAGN,GAAG,CAACG,EAAE,EAAE,UAAU,EAAEE,GAAG,CAAC;IACvCJ,MAAM,CAACK,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,gBAAgB,CAACI,IAAI,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EAEDE,SAASA,CAACD,IAAI,EAAEP,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAGN,GAAG,CAACG,EAAE,EAAE,UAAU,EAAEE,GAAG,CAAC;IACvCJ,MAAM,CAACK,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BK,MAAM,CAACR,MAAM,CAAC,CACbC,IAAI,CAAC,MAAM;UACRG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;UACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACN,CAAC,MAAM;QACHV,MAAM,CAACW,MAAM,CAACL,IAAI,CAAC;MACvB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}