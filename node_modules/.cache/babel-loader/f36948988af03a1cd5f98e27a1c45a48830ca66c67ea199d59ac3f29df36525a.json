{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Firebase関連のインポート\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Firebase from \"../firebase_settings/index.js\";\nconst auth = Firebase.auth;\nexport default {\n  logIn() {\n    // IDとパスワードの未入力チェック\n    if (this.inputValueId === undefined || this.inputValueId === \"\" || this.inputValuePassword === undefined || this.inputValuePassword === \"\") {\n      this.errorMessage = \"IDまたはパスワードが未入力です\";\n      return;\n    }\n\n    // エラーメッセージの消去\n    this.errorMessage = \"\"; // id,passを取得\n    const mId = this.inputValueId;\n    const mPass = this.inputValuePassword;\n\n    // 連続クリックを防ぐためにパスワード欄を空欄にする\n    this.inputValuePassword = \"\";\n\n    // サインインメソッド\n    signInWithEmailAndPassword(auth, mId, mPass)\n    // サインイン成功時\n    .then(userCredential => {\n      const user = userCredential.user;\n      console.log(\"ログイン成功 \" + user.email);\n      this.goToHome();\n    })\n\n    // サインイン失敗時\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"ログインエラー: errorCode -> \" + errorCode + \", errorMessage -> \" + errorMessage);\n      this.JudgeErrorCode(errorCode);\n    });\n  },\n  goToHome() {\n    this.$router.push(\"/\");\n  },\n  JudgeErrorCode(mError) {\n    const errorCode = String(mError);\n    if (errorCode === \"auth/wrong-password\" || errorCode === \"auth/invalid-email\" || errorCode === \"auth/user-not-found\") {\n      this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\";\n    } else {\n      this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\";\n    }\n  }\n};","map":{"version":3,"names":["signInWithEmailAndPassword","Firebase","auth","logIn","inputValueId","undefined","inputValuePassword","errorMessage","mId","mPass","then","userCredential","user","console","log","email","goToHome","catch","error","errorCode","code","message","JudgeErrorCode","$router","push","mError","String"],"sources":["C:\\Users\\taich\\Documents\\GitHub\\home\\src\\views\\FirebaseTestBody.vue"],"sourcesContent":["<template>\r\n  <div class=\"center_container\">\r\n    <div class=\"container\">\r\n      <p>ID(メールアドレス)</p>\r\n      <input type=\"email\" v-model=\"inputValueId\" />\r\n      <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\r\n      <p></p>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <p>パスワード</p>\r\n      <input type=\"password\" v-model=\"inputValuePassword\" />\r\n      <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\r\n      <p></p>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p class=\"red\">{{ errorMessage }}&nbsp;</p>\r\n    </div>\r\n    <div class=\"buttonbox\">\r\n      <button class=\"btn_standard\" type=\"submit\" v-on:click=\"logIn\">ログインする</button>\r\n    </div>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Firebase関連のインポート\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport Firebase from \"../firebase_settings/index.js\";\r\nconst auth = Firebase.auth;\r\nexport default {\r\n  logIn() {\r\n    // IDとパスワードの未入力チェック\r\n    if (\r\n      this.inputValueId === undefined ||\r\n      this.inputValueId === \"\" ||\r\n      this.inputValuePassword === undefined ||\r\n      this.inputValuePassword === \"\"\r\n    ) {\r\n      this.errorMessage = \"IDまたはパスワードが未入力です\";\r\n      return;\r\n    }\r\n\r\n    // エラーメッセージの消去\r\n    this.errorMessage = \"\"; // id,passを取得\r\n    const mId = this.inputValueId;\r\n    const mPass = this.inputValuePassword;\r\n\r\n    // 連続クリックを防ぐためにパスワード欄を空欄にする\r\n    this.inputValuePassword = \"\";\r\n\r\n    // サインインメソッド\r\n    signInWithEmailAndPassword(auth, mId, mPass)\r\n      // サインイン成功時\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n        console.log(\"ログイン成功 \" + user.email);\r\n        this.goToHome();\r\n      })\r\n\r\n      // サインイン失敗時\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(\r\n          \"ログインエラー: errorCode -> \" +\r\n            errorCode +\r\n            \", errorMessage -> \" +\r\n            errorMessage\r\n        );\r\n        this.JudgeErrorCode(errorCode);\r\n      });\r\n  },\r\n  goToHome() {\r\n    this.$router.push(\"/\");\r\n  },\r\n\r\n  JudgeErrorCode(mError) {\r\n    const errorCode = String(mError);\r\n    if (\r\n      errorCode === \"auth/wrong-password\" ||\r\n      errorCode === \"auth/invalid-email\" ||\r\n      errorCode === \"auth/user-not-found\"\r\n    ) {\r\n      this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\";\r\n    } else {\r\n      this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\";\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.center_container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 940px;\r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 30px 0 0;\r\n}\r\n.container input {\r\n  width: 400px;\r\n}\r\n.container p {\r\n  width: 200px;\r\n  text-align: left;\r\n  margin-top: 8px;\r\n}\r\n.buttonbox {\r\n  text-align: center;\r\n}\r\nbutton {\r\n  border-radius: 10px;\r\n  padding: 6px 20px 8px;\r\n  margin: 30px 0 0;\r\n  width: auto;\r\n  height: auto;\r\n  cursor: pointer;\r\n}\r\n.btn_standard {\r\n  background: #fff176;\r\n  border: 3px solid #fff176;\r\n}\r\n.btn_standard:hover {\r\n  background: #ffcf00;\r\n  border: 3px solid #ffcf00;\r\n}\r\n</style>\r\n"],"mappings":";AAiCA;AACA,SAASA,0BAAyB,QAAS,eAAe;AAC1D,OAAOC,QAAO,MAAO,+BAA+B;AACpD,MAAMC,IAAG,GAAID,QAAQ,CAACC,IAAI;AAC1B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN;IACA,IACE,IAAI,CAACC,YAAW,KAAMC,SAAQ,IAC9B,IAAI,CAACD,YAAW,KAAM,EAAC,IACvB,IAAI,CAACE,kBAAiB,KAAMD,SAAQ,IACpC,IAAI,CAACC,kBAAiB,KAAM,EAAC,EAC7B;MACA,IAAI,CAACC,YAAW,GAAI,kBAAkB;MACtC;IACF;;IAEA;IACA,IAAI,CAACA,YAAW,GAAI,EAAE,EAAE;IACxB,MAAMC,GAAE,GAAI,IAAI,CAACJ,YAAY;IAC7B,MAAMK,KAAI,GAAI,IAAI,CAACH,kBAAkB;;IAErC;IACA,IAAI,CAACA,kBAAiB,GAAI,EAAE;;IAE5B;IACAN,0BAA0B,CAACE,IAAI,EAAEM,GAAG,EAAEC,KAAK;IACzC;IAAA,CACCC,IAAI,CAAEC,cAAc,IAAK;MACxB,MAAMC,IAAG,GAAID,cAAc,CAACC,IAAI;MAChCC,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIF,IAAI,CAACG,KAAK,CAAC;MACnC,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC;;IAED;IAAA,CACCC,KAAK,CAAEC,KAAK,IAAK;MAChB,MAAMC,SAAQ,GAAID,KAAK,CAACE,IAAI;MAC5B,MAAMb,YAAW,GAAIW,KAAK,CAACG,OAAO;MAClCR,OAAO,CAACC,GAAG,CACT,wBAAuB,GACrBK,SAAQ,GACR,oBAAmB,GACnBZ,YAAW,CACd;MACD,IAAI,CAACe,cAAc,CAACH,SAAS,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EACDH,QAAQA,CAAA,EAAG;IACT,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;EACxB,CAAC;EAEDF,cAAcA,CAACG,MAAM,EAAE;IACrB,MAAMN,SAAQ,GAAIO,MAAM,CAACD,MAAM,CAAC;IAChC,IACEN,SAAQ,KAAM,qBAAoB,IAClCA,SAAQ,KAAM,oBAAmB,IACjCA,SAAQ,KAAM,qBAAoB,EAClC;MACA,IAAI,CAACZ,YAAW,GAAI,gCAAgC;IACtD,OAAO;MACL,IAAI,CAACA,YAAW,GAAI,6BAA6B;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}