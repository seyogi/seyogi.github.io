{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  components: {},\n  data() {\n    return {\n      //'PerScore':per_score,'MAXScore':rader_max\n      headers: [\"レーダー値\", \"曲名\", \"アーティスト名\"],\n      selectedTheme: \"NOTES\",\n      optionThemes: [{\n        id: 0,\n        name: \"NOTES\"\n      }, {\n        id: 1,\n        name: \"PEAK\"\n      }, {\n        id: 2,\n        name: \"SCRATCH\"\n      }, {\n        id: 3,\n        name: \"SOF-LAN\"\n      }, {\n        id: 4,\n        name: \"CHARGE\"\n      }, {\n        id: 5,\n        name: \"CHORD\"\n      }],\n      rename: {\n        HYPER: \"H\",\n        ANOTHER: \"A\",\n        LEGGENDARIA: \"L\"\n      },\n      numInput: \"10\",\n      errmsg: \"\",\n      uploadFile: null,\n      csvText: \"\",\n      checked: false,\n      config: {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      },\n      ShowData: []\n    };\n  },\n  methods: {\n    RANK: function (num) {\n      num *= 0.01;\n      if (num > 8 / 9) return \"AAA\";else if (num > 7 / 9) return \"AA\";else if (num > 6 / 9) return \"A\";else if (num > 5 / 9) return \"B\";else if (num > 4 / 9) return \"C\";else return \"D\";\n    },\n    sortBy(selectedTheme) {\n      this.create_ShowData();\n      this.ShowData.sort((a, b) => {\n        return b[\"radarScore\"][selectedTheme] - a[\"radarScore\"][selectedTheme];\n      });\n    },\n    create_ShowData() {\n      var temp_returnData = [];\n      var temp_scoreData = this.$parent.scoreData;\n      if (!this.checked) {\n        for (let key in temp_scoreData) {\n          var temp_maxScoreDiff = \"\";\n          var temp_maxScoreNum = 0;\n          for (let diff in temp_scoreData[key][\"radarScore\"]) {\n            if (temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme] > temp_maxScoreNum) {\n              temp_maxScoreNum = temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme];\n              temp_maxScoreDiff = diff;\n            }\n          }\n          if (temp_maxScoreNum > 0) {\n            temp_returnData.push({\n              TITLE: temp_scoreData[key][\"TITLE\"],\n              artist: temp_scoreData[key][\"artist\"],\n              diff: temp_maxScoreDiff,\n              radarScore: temp_scoreData[key][\"radarScore\"][temp_maxScoreDiff]\n            });\n          }\n        }\n        this.ShowData = temp_returnData;\n      } else {\n        for (let key in temp_scoreData) {\n          for (let diff in temp_scoreData[key][\"radarScore\"]) {\n            if (temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme] > 0) {\n              temp_returnData.push({\n                TITLE: temp_scoreData[key][\"TITLE\"],\n                artist: temp_scoreData[key][\"artist\"],\n                diff: diff,\n                radarScore: temp_scoreData[key][\"radarScore\"][diff]\n              });\n              diff;\n            }\n          }\n        }\n        this.ShowData = temp_returnData;\n        console.log(this.ShowData);\n      }\n    },\n    invisSameTitleData() {\n      this.checked = !this.checked;\n      this.sortBy(this.selectedTheme);\n    }\n  }\n};","map":{"version":3,"names":["components","data","headers","selectedTheme","optionThemes","id","name","rename","HYPER","ANOTHER","LEGGENDARIA","numInput","errmsg","uploadFile","csvText","checked","config","ShowData","methods","RANK","num","sortBy","create_ShowData","sort","a","b","temp_returnData","temp_scoreData","$parent","scoreData","key","temp_maxScoreDiff","temp_maxScoreNum","diff","push","TITLE","artist","radarScore","console","log","invisSameTitleData"],"sources":["C:\\Users\\taich\\Documents\\GitHub\\home\\src\\components\\iidxradarparts\\iidxListShow.vue"],"sourcesContent":["<template>\r\n  <div class=\"main_box\">\r\n    <br />\r\n    <input type=\"button\" id=\"aaa\" value=\"RELOAD\" @click=\"create_ShowData()\" />\r\n    <br />\r\n    <div id=\"vis\">\r\n      表示曲数\r\n      <input type=\"number\" v-model=\"numInput\" size=\"5\" />&nbsp;&nbsp;&nbsp;\r\n      <select @change=\"sortBy(selectedTheme)\" v-model=\"selectedTheme\">\r\n        <option disabled value=\"\">Theme一覧</option>\r\n        <option\r\n          v-for=\"Theme in optionThemes\"\r\n          v-bind:value=\"Theme.name\"\r\n          v-bind:key=\"Theme.id\"\r\n        >\r\n          {{ Theme.name }}\r\n        </option>\r\n      </select>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"checkbox\"\r\n        v-model=\"checked\"\r\n        @click=\"invisSameTitleData()\"\r\n      />\r\n      <label for=\"checkbox\">同名曲の異なる難易度を含む</label>\r\n      <br /><br />\r\n      <table align=\"center\">\r\n        <thead>\r\n          <tr>\r\n            <th v-for=\"(header, index) in headers\" v-bind:key=\"index\">\r\n              {{ header }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"scoreData in this.ShowData.slice(0, this.numInput)\"\r\n            :key=\"scoreData.index\"\r\n          >\r\n            <td>{{ scoreData.radarScore[selectedTheme] }}</td>\r\n            <td>{{ scoreData.TITLE }}&nbsp;({{ rename[scoreData.diff] }})</td>\r\n            <td>{{ scoreData.artist }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      //'PerScore':per_score,'MAXScore':rader_max\r\n      headers: [\"レーダー値\", \"曲名\", \"アーティスト名\"],\r\n      selectedTheme: \"NOTES\",\r\n      optionThemes: [\r\n        { id: 0, name: \"NOTES\" },\r\n        { id: 1, name: \"PEAK\" },\r\n        { id: 2, name: \"SCRATCH\" },\r\n        { id: 3, name: \"SOF-LAN\" },\r\n        { id: 4, name: \"CHARGE\" },\r\n        { id: 5, name: \"CHORD\" },\r\n      ],\r\n      rename: {\r\n        HYPER: \"H\",\r\n        ANOTHER: \"A\",\r\n        LEGGENDARIA: \"L\",\r\n      },\r\n      numInput: \"10\",\r\n      errmsg: \"\",\r\n      uploadFile: null,\r\n      csvText: \"\",\r\n      checked: false,\r\n      config: {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      },\r\n      ShowData: [],\r\n    };\r\n  },\r\n  methods: {\r\n    RANK: function (num) {\r\n      num *= 0.01;\r\n      if (num > 8 / 9) return \"AAA\";\r\n      else if (num > 7 / 9) return \"AA\";\r\n      else if (num > 6 / 9) return \"A\";\r\n      else if (num > 5 / 9) return \"B\";\r\n      else if (num > 4 / 9) return \"C\";\r\n      else return \"D\";\r\n    },\r\n    sortBy(selectedTheme) {\r\n      this.create_ShowData();\r\n      this.ShowData.sort((a, b) => {\r\n        return b[\"radarScore\"][selectedTheme] - a[\"radarScore\"][selectedTheme];\r\n      });\r\n    },\r\n    create_ShowData() {\r\n        var temp_returnData = [];\r\n        var temp_scoreData = this.$parent.scoreData;\r\n      if (!this.checked) {\r\n        for (let key in temp_scoreData) {\r\n          var temp_maxScoreDiff = \"\";\r\n          var temp_maxScoreNum = 0;\r\n          for (let diff in temp_scoreData[key][\"radarScore\"]) {\r\n            if (\r\n              temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme] >\r\n              temp_maxScoreNum\r\n            ) {\r\n              temp_maxScoreNum =\r\n                temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme];\r\n              temp_maxScoreDiff = diff;\r\n            }\r\n          }\r\n          if (temp_maxScoreNum > 0) {\r\n            temp_returnData.push({\r\n              TITLE: temp_scoreData[key][\"TITLE\"],\r\n              artist: temp_scoreData[key][\"artist\"],\r\n              diff: temp_maxScoreDiff,\r\n              radarScore: temp_scoreData[key][\"radarScore\"][temp_maxScoreDiff],\r\n            });\r\n          }\r\n        }\r\n        this.ShowData = temp_returnData;\r\n      } else {\r\n        for (let key in temp_scoreData) {\r\n          for (let diff in temp_scoreData[key][\"radarScore\"]) {\r\n            if (temp_scoreData[key][\"radarScore\"][diff][this.selectedTheme] > 0) {\r\n              temp_returnData.push({\r\n                TITLE: temp_scoreData[key][\"TITLE\"],\r\n                artist: temp_scoreData[key][\"artist\"],\r\n                diff: diff,\r\n                radarScore: temp_scoreData[key][\"radarScore\"][diff],\r\n              });diff\r\n            }\r\n          }\r\n        }\r\n        this.ShowData = temp_returnData;\r\n        console.log(this.ShowData);\r\n      }\r\n    },\r\n    invisSameTitleData() {\r\n      this.checked = !this.checked;\r\n      this.sortBy(this.selectedTheme)\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main_box {\r\n  text-align: center;\r\n  margin: auto;\r\n  width: 98%;\r\n}\r\ninput[type=\"text\"] {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\ntable {\r\n  border: solid 1px #ccc;\r\n  border-collapse: collapse;\r\n  margin: auto;\r\n}\r\nth {\r\n  padding: 5px;\r\n  border: solid 1px #ccc;\r\n  background-color: #eee;\r\n}\r\ntd {\r\n  height: 25px;\r\n  padding: 5px;\r\n  border: solid 1px #ccc;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}