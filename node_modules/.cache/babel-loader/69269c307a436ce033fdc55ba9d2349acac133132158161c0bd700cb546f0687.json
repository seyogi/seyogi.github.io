{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport iidxListSet from \"./iidxListSet.vue\";\nimport iidxListShow from \"./iidxListShow.vue\";\nimport LoadingAnimationComponent from \"./LoadingAnimationComponent.vue\";\n// Firebase関連のインポート\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nimport iidxRadarJson from \"../../assets/iidxRadar.json\";\nconst auth = Firebase.auth;\nconst db = Firebase.db;\nexport default {\n  components: {\n    iidxListSet,\n    iidxListShow,\n    LoadingAnimationComponent\n  },\n  data() {\n    return {\n      // ローディングアニメーション\n      isLoading: false,\n      // エラーメッセージ\n      errorMessage: \"\",\n      // 入力欄\n      inputValueId: \"test@gmail.com\",\n      inputValuePassword: \"\",\n      user: null,\n      show: \"1\",\n      iidxRadarScore: iidxRadarJson,\n      scoreData: [],\n      radarData: {}\n    };\n  },\n  methods: {\n    logIn() {\n      // IDとパスワードの未入力チェック\n      if (this.inputValueId === undefined || this.inputValueId === \"\" || this.inputValuePassword === undefined || this.inputValuePassword === \"\") {\n        this.errorMessage = \"IDまたはパスワードが未入力です\";\n        return;\n      }\n      this.isLoading = true;\n      // エラーメッセージの消去\n      this.errorMessage = \"\";\n      // id,passを取得\n      const mId = this.inputValueId;\n      const mPass = this.inputValuePassword;\n\n      // 連続クリックを防ぐためにパスワード欄を空欄にする\n      this.inputValuePassword = \"\";\n\n      // サインインメソッド\n      signInWithEmailAndPassword(auth, mId, mPass)\n      // サインイン成功時\n      .then(userCredential => {\n        this.user = userCredential.user;\n        console.log(\"ログイン成功 \" + this.user.email);\n        this.isLoading = false;\n        this.showMenu();\n      })\n\n      // サインイン失敗時\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"ログインエラー: errorCode -> \" + errorCode + \", errorMessage -> \" + errorMessage);\n        this.JudgeErrorCode(errorCode);\n        this.isLoading = false;\n      });\n    },\n    JudgeErrorCode(mError) {\n      const errorCode = String(mError);\n      if (errorCode === \"auth/wrong-password\" || errorCode === \"auth/invalid-email\" || errorCode === \"auth/user-not-found\") {\n        this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\";\n      } else {\n        this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\";\n      }\n    },\n    async showMenu() {\n      let box = document.getElementById(\"box\");\n      this.changeElement(box);\n      this.receive_radarData();\n      this.receive_userData(this.user.uid);\n    },\n    calc_radarScore(diff, userData, radarData) {\n      var maxScore = radarData[diff][\"ノート数\"] * 2;\n      delete radarData[\"ノート数\"];\n      Object.entries(radarData[diff]).forEach(([key, value]) => {\n        radarData[diff][key] = Math.floor(value * (userData[diff] / maxScore) * Math.pow(10, 2)) / Math.pow(10, 2);\n      });\n      return radarData[diff];\n    },\n    receive_radarData() {\n      this.iidxRadarScore = iidxRadarJson;\n    },\n    receive_userData(uid) {\n      const docRef = doc(db, \"userData\", uid);\n      getDoc(docRef).then(documentSnapshot => {\n        if (documentSnapshot.exists()) {\n          console.log(\"Document exist!\");\n          var temp_userData = documentSnapshot.data();\n          var temp_returnData = [];\n          for (let key in temp_userData) {\n            var temp_RadarData = this.iidxRadarScore[temp_userData[key][\"TITLE\"]];\n            if (temp_RadarData != undefined) {\n              //曲名があるか\n              var temp_diffScores = {};\n              for (let diff in temp_RadarData) {\n                temp_diffScores[diff] = this.calc_radarScore(diff, temp_userData[key], temp_RadarData);\n              }\n              temp_returnData.push({\n                TITLE: temp_userData[key][\"TITLE\"],\n                artist: temp_userData[key][\"artist\"],\n                radarScore: temp_diffScores\n              });\n            }\n          }\n          this.scoreData = temp_returnData;\n          this.$refs.iidxListShow.sortBy(\"NOTES\");\n        } else {\n          console.log(\"Document does not exist!\");\n        }\n      });\n    },\n    changeElement(el) {\n      el.classList.toggle(\"active\");\n    },\n    selectTab: function (num) {\n      this.show = num;\n    }\n  }\n};","map":{"version":3,"names":["iidxListSet","iidxListShow","LoadingAnimationComponent","signInWithEmailAndPassword","doc","getDoc","Firebase","iidxRadarJson","auth","db","components","data","isLoading","errorMessage","inputValueId","inputValuePassword","user","show","iidxRadarScore","scoreData","radarData","methods","logIn","undefined","mId","mPass","then","userCredential","console","log","email","showMenu","catch","error","errorCode","code","message","JudgeErrorCode","mError","String","box","document","getElementById","changeElement","receive_radarData","receive_userData","uid","calc_radarScore","diff","userData","maxScore","Object","entries","forEach","key","value","Math","floor","pow","docRef","documentSnapshot","exists","temp_userData","temp_returnData","temp_RadarData","temp_diffScores","push","TITLE","artist","radarScore","$refs","sortBy","el","classList","toggle","selectTab","num"],"sources":["C:\\Users\\taich\\Documents\\GitHub\\home\\src\\components\\iidxradarparts\\FirebaseTestBody.vue"],"sourcesContent":["<template>\r\n  <div class=\"main_box\">\r\n    <div class=\"container\">\r\n      <p>ID(メールアドレス)</p>\r\n      <input type=\"email\" v-model=\"inputValueId\" />\r\n      <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\r\n      <p></p>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <p>パスワード</p>\r\n      <input type=\"password\" v-model=\"inputValuePassword\" />\r\n      <!-- この下の<p></p>はテキストボックスを中央に配置するために必要な疑似要素です -->\r\n      <p></p>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p class=\"red\">{{ errorMessage }}&nbsp;</p>\r\n    </div>\r\n    <div class=\"buttonbox\">\r\n      <button class=\"btn_standard\" type=\"submit\" v-on:click=\"logIn\">ログインする</button>\r\n    </div>\r\n    <div class=\"loading_animation_container\">\r\n      <div class=\"loading_animation\" v-if=\"this.isLoading\">\r\n        <LoadingAnimationComponent :uid=\"user\"></LoadingAnimationComponent>\r\n      </div>\r\n    </div>\r\n    <div class=\"active\" id=\"box\">\r\n      <div class=\"tabgroup\">\r\n        <ul class=\"tabnav\">\r\n          <button @click=\"selectTab('1')\">LIST表示</button>\r\n          <button @click=\"selectTab('2')\">DATA登録</button>\r\n        </ul>\r\n        <div class=\"tabcontents\">\r\n          <div v-if=\"show == '1'\"><iidxListShow ref=\"iidxListShow\"> </iidxListShow></div>\r\n          <div v-else-if=\"show == '2'\"><iidxListSet> </iidxListSet></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport iidxListSet from \"./iidxListSet.vue\";\r\nimport iidxListShow from \"./iidxListShow.vue\";\r\nimport LoadingAnimationComponent from \"./LoadingAnimationComponent.vue\";\r\n// Firebase関連のインポート\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\nimport iidxRadarJson from \"../../assets/iidxRadar.json\";\r\n\r\nconst auth = Firebase.auth;\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n  components: {\r\n    iidxListSet,\r\n    iidxListShow,\r\n    LoadingAnimationComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      // ローディングアニメーション\r\n      isLoading: false,\r\n      // エラーメッセージ\r\n      errorMessage: \"\",\r\n      // 入力欄\r\n      inputValueId: \"test@gmail.com\",\r\n      inputValuePassword: \"\",\r\n      user: null,\r\n\r\n      show: \"1\",\r\n\r\n      iidxRadarScore: iidxRadarJson,\r\n\r\n      scoreData: [],\r\n      radarData: {},\r\n    };\r\n  },\r\n  methods: {\r\n    logIn() {\r\n      // IDとパスワードの未入力チェック\r\n      if (\r\n        this.inputValueId === undefined ||\r\n        this.inputValueId === \"\" ||\r\n        this.inputValuePassword === undefined ||\r\n        this.inputValuePassword === \"\"\r\n      ) {\r\n        this.errorMessage = \"IDまたはパスワードが未入力です\";\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      // エラーメッセージの消去\r\n      this.errorMessage = \"\";\r\n      // id,passを取得\r\n      const mId = this.inputValueId;\r\n      const mPass = this.inputValuePassword;\r\n\r\n      // 連続クリックを防ぐためにパスワード欄を空欄にする\r\n      this.inputValuePassword = \"\";\r\n\r\n      // サインインメソッド\r\n      signInWithEmailAndPassword(auth, mId, mPass)\r\n        // サインイン成功時\r\n        .then((userCredential) => {\r\n          this.user = userCredential.user;\r\n          console.log(\"ログイン成功 \" + this.user.email);\r\n          this.isLoading = false;\r\n          this.showMenu();\r\n        })\r\n\r\n        // サインイン失敗時\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          console.log(\r\n            \"ログインエラー: errorCode -> \" +\r\n              errorCode +\r\n              \", errorMessage -> \" +\r\n              errorMessage\r\n          );\r\n          this.JudgeErrorCode(errorCode);\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    JudgeErrorCode(mError) {\r\n      const errorCode = String(mError);\r\n      if (\r\n        errorCode === \"auth/wrong-password\" ||\r\n        errorCode === \"auth/invalid-email\" ||\r\n        errorCode === \"auth/user-not-found\"\r\n      ) {\r\n        this.errorMessage = \"ログインに失敗しました。IDまたはパスワードが間違っています\";\r\n      } else {\r\n        this.errorMessage = \"ログインに失敗しました。予期せぬエラーが発生しました。\";\r\n      }\r\n    },\r\n\r\n    async showMenu() {\r\n      let box = document.getElementById(\"box\");\r\n      this.changeElement(box);\r\n      this.receive_radarData();\r\n      this.receive_userData(this.user.uid);\r\n    },\r\n\r\n    calc_radarScore(diff, userData, radarData) {\r\n      var maxScore = radarData[diff][\"ノート数\"] * 2;\r\n      delete radarData[\"ノート数\"];\r\n      Object.entries(radarData[diff]).forEach(([key, value]) => {\r\n        radarData[diff][key] =\r\n          Math.floor(value * (userData[diff] / maxScore) * Math.pow(10, 2)) /\r\n          Math.pow(10, 2);\r\n      });\r\n      return radarData[diff];\r\n    },\r\n\r\n    receive_radarData() {\r\n      this.iidxRadarScore = iidxRadarJson;\r\n    },\r\n\r\n    receive_userData(uid) {\r\n      const docRef = doc(db, \"userData\", uid);\r\n      getDoc(docRef).then((documentSnapshot) => {\r\n        if (documentSnapshot.exists()) {\r\n          console.log(\"Document exist!\");\r\n          var temp_userData = documentSnapshot.data();\r\n          var temp_returnData = [];\r\n          for (let key in temp_userData) {\r\n            var temp_RadarData = this.iidxRadarScore[temp_userData[key][\"TITLE\"]];\r\n            if (temp_RadarData != undefined) {\r\n              //曲名があるか\r\n              var temp_diffScores = {};\r\n              for (let diff in temp_RadarData) {\r\n                temp_diffScores[diff] = this.calc_radarScore(diff, temp_userData[key], temp_RadarData);\r\n              }\r\n              temp_returnData.push({\r\n                  TITLE: temp_userData[key][\"TITLE\"],\r\n                  artist: temp_userData[key][\"artist\"],\r\n                  radarScore: temp_diffScores,\r\n                });\r\n            }\r\n          }\r\n          this.scoreData = temp_returnData;\r\n          this.$refs.iidxListShow.sortBy(\"NOTES\");\r\n        } else {\r\n          console.log(\"Document does not exist!\");\r\n        }\r\n      });\r\n    },\r\n\r\n    changeElement(el) {\r\n      el.classList.toggle(\"active\");\r\n    },\r\n\r\n    selectTab: function (num) {\r\n      this.show = num;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main_box {\r\n  margin-left: 10px;\r\n  width: 98%;\r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 30px 0 0;\r\n}\r\n.container input {\r\n  width: 400px;\r\n}\r\n.container p {\r\n  width: 200px;\r\n  text-align: left;\r\n  margin-top: 8px;\r\n}\r\n.message {\r\n  text-align: center;\r\n}\r\n.message .red {\r\n  color: red;\r\n}\r\n.buttonbox {\r\n  text-align: center;\r\n}\r\nbutton {\r\n  border-radius: 10px;\r\n  padding: 6px 20px 8px;\r\n  margin: 30px 0 0;\r\n  width: auto;\r\n  height: auto;\r\n  cursor: pointer;\r\n}\r\n.btn_standard {\r\n  background: #fff176;\r\n  border: 3px solid #fff176;\r\n}\r\n.btn_standard:hover {\r\n  background: #ffcf00;\r\n  border: 3px solid #ffcf00;\r\n}\r\n.loading_animation_container {\r\n  height: 15px;\r\n  margin-top: 20px;\r\n}\r\n.active {\r\n  display: none !important;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}