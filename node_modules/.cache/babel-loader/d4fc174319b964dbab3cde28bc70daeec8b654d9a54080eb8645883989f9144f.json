{"ast":null,"code":"import { collection, doc, getDoc, getDocs, setDoc, updateDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nconst db = Firebase.db;\nexport default {\n  receive_radarData() {\n    const usersCollectionRef = collection(db, 'iidxRadarData');\n    getDocs(usersCollectionRef).then(documentSnapshot => {\n      var tempDict = {};\n      documentSnapshot.docs.forEach(doc => {\n        tempDict[doc.data()[\"TITLE\"]] = doc.data();\n      });\n    });\n  },\n  receive_userData(uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:', documentSnapshot.data());\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_userData(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        updateDoc(docRef, data).then(() => {\n          console.log(\"Document successfully update!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        setDoc(docRef, data).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["collection","doc","getDoc","getDocs","setDoc","updateDoc","Firebase","db","receive_radarData","usersCollectionRef","then","documentSnapshot","tempDict","docs","forEach","data","receive_userData","uid","docRef","exists","console","log","send_userData","catch","error"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { collection, doc, getDoc, getDocs, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    receive_radarData() {\r\n        const usersCollectionRef = collection(db, 'iidxRadarData');\r\n        getDocs(usersCollectionRef).then((documentSnapshot) => {\r\n            var tempDict = {};\r\n            documentSnapshot.docs.forEach((doc) => {\r\n                tempDict[doc.data()[\"TITLE\"]]=doc.data();\r\n            });\r\n        });\r\n    },\r\n\r\n    receive_userData(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:', documentSnapshot.data());\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_userData(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                updateDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully update!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            } else {\r\n                setDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACxF,OAAOC,QAAQ,MAAM,kCAAkC;AAEvD,MAAMC,EAAE,GAAGD,QAAQ,CAACC,EAAE;AAEtB,eAAe;EACXC,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,kBAAkB,GAAGT,UAAU,CAACO,EAAE,EAAE,eAAe,CAAC;IAC1DJ,OAAO,CAACM,kBAAkB,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACnD,IAAIC,QAAQ,GAAG,CAAC,CAAC;MACjBD,gBAAgB,CAACE,IAAI,CAACC,OAAO,CAAEb,GAAG,IAAK;QACnCW,QAAQ,CAACX,GAAG,CAACc,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,GAACd,GAAG,CAACc,IAAI,EAAE;MAC5C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAEDC,gBAAgBA,CAACC,GAAG,EAAE;IAClB,MAAMC,MAAM,GAAGjB,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEU,GAAG,CAAC;IACvCf,MAAM,CAACgB,MAAM,CAAC,CAACR,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACQ,MAAM,EAAE,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEV,gBAAgB,CAACI,IAAI,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EAEDC,aAAaA,CAACP,IAAI,EAAEE,GAAG,EAAE;IACrB,MAAMC,MAAM,GAAGjB,GAAG,CAACM,EAAE,EAAE,UAAU,EAAEU,GAAG,CAAC;IACvCf,MAAM,CAACgB,MAAM,CAAC,CAACR,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACQ,MAAM,EAAE,EAAE;QAC3Bd,SAAS,CAACa,MAAM,EAAEH,IAAI,CAAC,CAClBL,IAAI,CAAC,MAAM;UACRU,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAChD,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;UACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV,CAAC,MAAM;QACHpB,MAAM,CAACc,MAAM,EAAEH,IAAI,CAAC,CACfL,IAAI,CAAC,MAAM;UACRU,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;UACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}