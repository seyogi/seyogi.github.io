{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Vue 3 Carousel 0.3.0\n * (c) 2023\n * @license MIT\n */\nimport { Fragment, defineComponent, inject, ref, h, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, cloneVNode } from 'vue';\nconst defaultConfigs = {\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  modelValue: 0,\n  transition: 300,\n  autoplay: 0,\n  snapAlign: 'center',\n  wrapAround: false,\n  throttle: 16,\n  pauseAutoplayOnHover: false,\n  mouseDrag: true,\n  touchDrag: true,\n  dir: 'ltr',\n  breakpoints: undefined\n};\nconst carouselProps = {\n  // count of items to showed per view\n  itemsToShow: {\n    default: defaultConfigs.itemsToShow,\n    type: Number\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: defaultConfigs.itemsToScroll,\n    type: Number\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: defaultConfigs.wrapAround,\n    type: Boolean\n  },\n  // control max drag\n  throttle: {\n    default: defaultConfigs.throttle,\n    type: Number\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: defaultConfigs.snapAlign,\n    validator(value) {\n      // The value must match one of these strings\n      return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\n    }\n  },\n  // sliding transition time in ms\n  transition: {\n    default: defaultConfigs.transition,\n    type: Number\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: defaultConfigs.breakpoints,\n    type: Object\n  },\n  // time to auto advance slides in ms\n  autoplay: {\n    default: defaultConfigs.autoplay,\n    type: Number\n  },\n  // pause autoplay when mouse hover over the carousel\n  pauseAutoplayOnHover: {\n    default: defaultConfigs.pauseAutoplayOnHover,\n    type: Boolean\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number\n  },\n  // toggle mouse dragging.\n  mouseDrag: {\n    default: defaultConfigs.mouseDrag,\n    type: Boolean\n  },\n  // toggle mouse dragging.\n  touchDrag: {\n    default: defaultConfigs.touchDrag,\n    type: Boolean\n  },\n  // control snap position alignment\n  dir: {\n    default: defaultConfigs.dir,\n    validator(value) {\n      // The value must match one of these strings\n      return ['rtl', 'ltr'].includes(value);\n    }\n  },\n  // an object to pass all settings\n  settings: {\n    default() {\n      return {};\n    },\n    type: Object\n  }\n};\nfunction getMaxSlideIndex({\n  config,\n  slidesCount\n}) {\n  const {\n    snapAlign,\n    wrapAround,\n    itemsToShow = 1\n  } = config;\n  if (wrapAround) {\n    return Math.max(slidesCount - 1, 0);\n  }\n  let output;\n  switch (snapAlign) {\n    case 'start':\n      output = slidesCount - itemsToShow;\n      break;\n    case 'end':\n      output = slidesCount - 1;\n      break;\n    case 'center':\n    case 'center-odd':\n      output = slidesCount - Math.ceil((itemsToShow - 0.5) / 2);\n      break;\n    case 'center-even':\n      output = slidesCount - Math.ceil(itemsToShow / 2);\n      break;\n    default:\n      output = 0;\n      break;\n  }\n  return Math.max(output, 0);\n}\nfunction getMinSlideIndex({\n  config,\n  slidesCount\n}) {\n  const {\n    wrapAround,\n    snapAlign,\n    itemsToShow = 1\n  } = config;\n  let output = 0;\n  if (wrapAround || itemsToShow > slidesCount) {\n    return output;\n  }\n  switch (snapAlign) {\n    case 'start':\n      output = 0;\n      break;\n    case 'end':\n      output = itemsToShow - 1;\n      break;\n    case 'center':\n    case 'center-odd':\n      output = Math.floor((itemsToShow - 1) / 2);\n      break;\n    case 'center-even':\n      output = Math.floor((itemsToShow - 2) / 2);\n      break;\n    default:\n      output = 0;\n      break;\n  }\n  return output;\n}\nfunction getNumberInRange({\n  val,\n  max,\n  min\n}) {\n  if (max < min) {\n    return val;\n  }\n  return Math.min(Math.max(val, min), max);\n}\nfunction getSlidesToScroll({\n  config,\n  currentSlide,\n  slidesCount\n}) {\n  const {\n    snapAlign,\n    wrapAround,\n    itemsToShow = 1\n  } = config;\n  let output = currentSlide;\n  switch (snapAlign) {\n    case 'center':\n    case 'center-odd':\n      output -= (itemsToShow - 1) / 2;\n      break;\n    case 'center-even':\n      output -= (itemsToShow - 2) / 2;\n      break;\n    case 'end':\n      output -= itemsToShow - 1;\n      break;\n  }\n  if (wrapAround) {\n    return output;\n  }\n  return getNumberInRange({\n    val: output,\n    max: slidesCount - itemsToShow,\n    min: 0\n  });\n}\nfunction getSlidesVNodes(vNode) {\n  if (!vNode) return [];\n  return vNode.reduce((acc, node) => {\n    var _a;\n    if (node.type === Fragment) {\n      return [...acc, ...getSlidesVNodes(node.children)];\n    }\n    if (((_a = node.type) === null || _a === void 0 ? void 0 : _a.name) === 'CarouselSlide') {\n      return [...acc, node];\n    }\n    return acc;\n  }, []);\n}\nfunction mapNumberToRange({\n  val,\n  max,\n  min = 0\n}) {\n  if (val > max) {\n    return mapNumberToRange({\n      val: val - (max + 1),\n      max,\n      min\n    });\n  }\n  if (val < min) {\n    return mapNumberToRange({\n      val: val + (max + 1),\n      max,\n      min\n    });\n  }\n  return val;\n}\n\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\n// eslint-disable-next-line no-unused-vars\nfunction throttle(fn, limit) {\n  let inThrottle;\n  if (!limit) {\n    return fn;\n  }\n  return function (...args) {\n    const self = this;\n    if (!inThrottle) {\n      fn.apply(self, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\n// eslint-disable-next-line no-unused-vars\nfunction debounce(fn, delay) {\n  let timerId;\n  return function (...args) {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n}\nvar ARIAComponent = defineComponent({\n  name: 'ARIA',\n  setup() {\n    const currentSlide = inject('currentSlide', ref(0));\n    const slidesCount = inject('slidesCount', ref(0));\n    return () => h('div', {\n      class: ['carousel__liveregion', 'carousel__sr-only'],\n      'aria-live': 'polite',\n      'aria-atomic': 'true'\n    }, `Item ${currentSlide.value + 1} of ${slidesCount.value}`);\n  }\n});\nvar Carousel = defineComponent({\n  name: 'Carousel',\n  props: carouselProps,\n  setup(props, {\n    slots,\n    emit,\n    expose\n  }) {\n    var _a;\n    const root = ref(null);\n    const slides = ref([]);\n    const slideWidth = ref(0);\n    const slidesCount = ref(0);\n    // current config\n    const config = reactive(Object.assign({}, defaultConfigs));\n    // default carousel configs\n    let __defaultConfig = Object.assign({}, defaultConfigs);\n    // breakpoints configs\n    let breakpoints;\n    // slides\n    const currentSlideIndex = ref((_a = props.modelValue) !== null && _a !== void 0 ? _a : 0);\n    const prevSlideIndex = ref(0);\n    const middleSlideIndex = ref(0);\n    const maxSlideIndex = ref(0);\n    const minSlideIndex = ref(0);\n    let autoplayTimer;\n    let transitionTimer;\n    provide('config', config);\n    provide('slidesCount', slidesCount);\n    provide('currentSlide', currentSlideIndex);\n    provide('maxSlide', maxSlideIndex);\n    provide('minSlide', minSlideIndex);\n    provide('slideWidth', slideWidth);\n    /**\r\n     * Configs\r\n     */\n    function initDefaultConfigs() {\n      breakpoints = Object.assign({}, props.breakpoints);\n      __defaultConfig = Object.assign(Object.assign(Object.assign({}, __defaultConfig), props), {\n        breakpoints: undefined\n      });\n      bindConfigs(__defaultConfig);\n    }\n    function updateBreakpointsConfigs() {\n      if (!breakpoints || !Object.keys(breakpoints).length) return;\n      const breakpointsArray = Object.keys(breakpoints).map(key => Number(key)).sort((a, b) => +b - +a);\n      let newConfig = Object.assign({}, __defaultConfig);\n      breakpointsArray.some(breakpoint => {\n        const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\n        if (isMatched) {\n          newConfig = Object.assign(Object.assign({}, newConfig), breakpoints[breakpoint]);\n        }\n        return isMatched;\n      });\n      bindConfigs(newConfig);\n    }\n    function bindConfigs(newConfig) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      Object.entries(newConfig).forEach(([key, val]) => config[key] = val);\n    }\n    const handleWindowResize = debounce(() => {\n      updateBreakpointsConfigs();\n      updateSlideWidth();\n    }, 16);\n    /**\r\n     * Setup functions\r\n     */\n    function updateSlideWidth() {\n      if (!root.value) return;\n      const rect = root.value.getBoundingClientRect();\n      slideWidth.value = rect.width / config.itemsToShow;\n    }\n    function updateSlidesData() {\n      if (slidesCount.value <= 0) return;\n      middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\n      maxSlideIndex.value = getMaxSlideIndex({\n        config,\n        slidesCount: slidesCount.value\n      });\n      minSlideIndex.value = getMinSlideIndex({\n        config,\n        slidesCount: slidesCount.value\n      });\n      if (!config.wrapAround) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value\n        });\n      }\n    }\n    onMounted(() => {\n      nextTick(() => updateSlideWidth());\n      // Overcome some edge cases\n      setTimeout(() => updateSlideWidth(), 1000);\n      updateBreakpointsConfigs();\n      initAutoplay();\n      window.addEventListener('resize', handleWindowResize, {\n        passive: true\n      });\n      emit('init');\n    });\n    onUnmounted(() => {\n      if (transitionTimer) {\n        clearTimeout(transitionTimer);\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer);\n      }\n      window.removeEventListener('resize', handleWindowResize, {\n        passive: true\n      });\n    });\n    /**\r\n     * Carousel Event listeners\r\n     */\n    let isTouch = false;\n    const startPosition = {\n      x: 0,\n      y: 0\n    };\n    const endPosition = {\n      x: 0,\n      y: 0\n    };\n    const dragged = reactive({\n      x: 0,\n      y: 0\n    });\n    const isHover = ref(false);\n    const isDragging = ref(false);\n    const handleMouseEnter = () => {\n      isHover.value = true;\n    };\n    const handleMouseLeave = () => {\n      isHover.value = false;\n    };\n    function handleDragStart(event) {\n      if (['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName)) {\n        return;\n      }\n      isTouch = event.type === 'touchstart';\n      if (!isTouch) {\n        event.preventDefault();\n      }\n      if (!isTouch && event.button !== 0 || isSliding.value) {\n        return;\n      }\n      startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\n      startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\n      document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\n      document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\n    }\n    const handleDragging = throttle(event => {\n      isDragging.value = true;\n      endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\n      endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\n      const deltaX = endPosition.x - startPosition.x;\n      const deltaY = endPosition.y - startPosition.y;\n      dragged.y = deltaY;\n      dragged.x = deltaX;\n    }, config.throttle);\n    function handleDragEnd() {\n      const direction = config.dir === 'rtl' ? -1 : 1;\n      const tolerance = Math.sign(dragged.x) * 0.4;\n      const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\n      // Prevent clicking if there is clicked slides\n      if (draggedSlides && !isTouch) {\n        const captureClick = e => {\n          e.stopPropagation();\n          window.removeEventListener('click', captureClick, true);\n        };\n        window.addEventListener('click', captureClick, true);\n      }\n      slideTo(currentSlideIndex.value - draggedSlides);\n      dragged.x = 0;\n      dragged.y = 0;\n      isDragging.value = false;\n      document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\n      document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\n    }\n    /**\r\n     * Autoplay\r\n     */\n    function initAutoplay() {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return;\n      }\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return;\n        }\n        next();\n      }, config.autoplay);\n    }\n    function resetAutoplay() {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer);\n        autoplayTimer = null;\n      }\n      initAutoplay();\n    }\n    /**\r\n     * Navigation function\r\n     */\n    const isSliding = ref(false);\n    function slideTo(slideIndex) {\n      const currentVal = config.wrapAround ? slideIndex : getNumberInRange({\n        val: slideIndex,\n        max: maxSlideIndex.value,\n        min: minSlideIndex.value\n      });\n      if (currentSlideIndex.value === currentVal || isSliding.value) {\n        return;\n      }\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value\n      });\n      isSliding.value = true;\n      prevSlideIndex.value = currentSlideIndex.value;\n      currentSlideIndex.value = currentVal;\n      transitionTimer = setTimeout(() => {\n        if (config.wrapAround) {\n          const mappedNumber = mapNumberToRange({\n            val: currentVal,\n            max: maxSlideIndex.value,\n            min: 0\n          });\n          if (mappedNumber !== currentSlideIndex.value) {\n            currentSlideIndex.value = mappedNumber;\n            emit('loop', {\n              currentSlideIndex: currentSlideIndex.value,\n              slidingToIndex: slideIndex\n            });\n          }\n        }\n        emit('update:modelValue', currentSlideIndex.value);\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value\n        });\n        isSliding.value = false;\n        resetAutoplay();\n      }, config.transition);\n    }\n    function next() {\n      slideTo(currentSlideIndex.value + config.itemsToScroll);\n    }\n    function prev() {\n      slideTo(currentSlideIndex.value - config.itemsToScroll);\n    }\n    const nav = {\n      slideTo,\n      next,\n      prev\n    };\n    provide('nav', nav);\n    provide('isSliding', isSliding);\n    /**\r\n     * Track style\r\n     */\n    const slidesToScroll = computed(() => getSlidesToScroll({\n      config,\n      currentSlide: currentSlideIndex.value,\n      slidesCount: slidesCount.value\n    }));\n    provide('slidesToScroll', slidesToScroll);\n    const trackStyle = computed(() => {\n      const direction = config.dir === 'rtl' ? -1 : 1;\n      const xScroll = slidesToScroll.value * slideWidth.value * direction;\n      return {\n        transform: `translateX(${dragged.x - xScroll}px)`,\n        transition: `${isSliding.value ? config.transition : 0}ms`,\n        margin: config.wrapAround ? `0 -${slidesCount.value * slideWidth.value}px` : '',\n        width: `100%`\n      };\n    });\n    function restartCarousel() {\n      initDefaultConfigs();\n      updateBreakpointsConfigs();\n      updateSlidesData();\n      updateSlideWidth();\n      resetAutoplay();\n    }\n    // Update the carousel on props change\n    Object.keys(carouselProps).forEach(prop => {\n      if (['modelValue'].includes(prop)) return;\n      watch(() => props[prop], restartCarousel);\n    });\n    // Handle changing v-model value\n    watch(() => props['modelValue'], val => {\n      if (val === currentSlideIndex.value) {\n        return;\n      }\n      slideTo(Number(val));\n    });\n    // Handel when slides added/removed\n    watch(slidesCount, updateSlidesData);\n    // Init carousel\n    emit('before-init');\n    initDefaultConfigs();\n    const data = {\n      config,\n      slidesCount,\n      slideWidth,\n      next,\n      prev,\n      slideTo,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      middleSlide: middleSlideIndex\n    };\n    expose({\n      updateBreakpointsConfigs,\n      updateSlidesData,\n      updateSlideWidth,\n      initDefaultConfigs,\n      restartCarousel,\n      slideTo,\n      next,\n      prev,\n      nav,\n      data\n    });\n    const slotSlides = slots.default || slots.slides;\n    const slotAddons = slots.addons;\n    const slotsProps = reactive(data);\n    return () => {\n      const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\n      const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\n      slidesElements.forEach((el, index) => el.props.index = index);\n      let output = slidesElements;\n      if (config.wrapAround) {\n        const slidesBefore = slidesElements.map((el, index) => cloneVNode(el, {\n          index: -slidesElements.length + index,\n          isClone: true,\n          key: `clone-before-${index}`\n        }));\n        const slidesAfter = slidesElements.map((el, index) => cloneVNode(el, {\n          index: slidesElements.length + index,\n          isClone: true,\n          key: `clone-after-${index}`\n        }));\n        output = [...slidesBefore, ...slidesElements, ...slidesAfter];\n      }\n      slides.value = slidesElements;\n      slidesCount.value = Math.max(slidesElements.length, 1);\n      const trackEl = h('ol', {\n        class: 'carousel__track',\n        style: trackStyle.value,\n        onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n        onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null\n      }, output);\n      const viewPortEl = h('div', {\n        class: 'carousel__viewport'\n      }, trackEl);\n      return h('section', {\n        ref: root,\n        class: {\n          carousel: true,\n          'is-sliding': isSliding.value,\n          'is-dragging': isDragging.value,\n          'is-hover': isHover.value,\n          'carousel--rtl': config.dir === 'rtl'\n        },\n        dir: config.dir,\n        'aria-label': 'Gallery',\n        tabindex: '0',\n        onMouseenter: handleMouseEnter,\n        onMouseleave: handleMouseLeave\n      }, [viewPortEl, addonsElements, h(ARIAComponent)]);\n    };\n  }\n});\nconst icons = {\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z'\n};\nconst Icon = props => {\n  const iconName = props.name;\n  if (!iconName || typeof iconName !== 'string') {\n    return;\n  }\n  const path = icons[iconName];\n  const pathEl = h('path', {\n    d: path\n  });\n  const iconTitle = props.title || iconName;\n  const titleEl = h('title', iconTitle);\n  return h('svg', {\n    class: 'carousel__icon',\n    viewBox: '0 0 24 24',\n    role: 'img',\n    ariaLabel: iconTitle\n  }, [titleEl, pathEl]);\n};\nIcon.props = {\n  name: String,\n  title: String\n};\nconst Navigation = (props, {\n  slots,\n  attrs\n}) => {\n  const {\n    next: slotNext,\n    prev: slotPrev\n  } = slots || {};\n  const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\n  const maxSlide = inject('maxSlide', ref(1));\n  const minSlide = inject('minSlide', ref(1));\n  const currentSlide = inject('currentSlide', ref(1));\n  const nav = inject('nav', {});\n  const {\n    dir,\n    wrapAround\n  } = config;\n  const isRTL = dir === 'rtl';\n  const prevButton = h('button', {\n    type: 'button',\n    class: ['carousel__prev', !wrapAround && currentSlide.value <= minSlide.value && 'carousel__prev--disabled', attrs === null || attrs === void 0 ? void 0 : attrs.class],\n    'aria-label': `Navigate to previous slide`,\n    onClick: nav.prev\n  }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, {\n    name: isRTL ? 'arrowRight' : 'arrowLeft'\n  }));\n  const nextButton = h('button', {\n    type: 'button',\n    class: ['carousel__next', !wrapAround && currentSlide.value >= maxSlide.value && 'carousel__next--disabled', attrs === null || attrs === void 0 ? void 0 : attrs.class],\n    'aria-label': `Navigate to next slide`,\n    onClick: nav.next\n  }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, {\n    name: isRTL ? 'arrowLeft' : 'arrowRight'\n  }));\n  return [prevButton, nextButton];\n};\nconst Pagination = () => {\n  const maxSlide = inject('maxSlide', ref(1));\n  const minSlide = inject('minSlide', ref(1));\n  const currentSlide = inject('currentSlide', ref(1));\n  const nav = inject('nav', {});\n  const isActive = slide => mapNumberToRange({\n    val: currentSlide.value,\n    max: maxSlide.value,\n    min: 0\n  }) === slide;\n  const children = [];\n  for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\n    const button = h('button', {\n      type: 'button',\n      class: {\n        'carousel__pagination-button': true,\n        'carousel__pagination-button--active': isActive(slide)\n      },\n      'aria-label': `Navigate to slide ${slide + 1}`,\n      onClick: () => nav.slideTo(slide)\n    });\n    const item = h('li', {\n      class: 'carousel__pagination-item',\n      key: slide\n    }, button);\n    children.push(item);\n  }\n  return h('ol', {\n    class: 'carousel__pagination'\n  }, children);\n};\nvar Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    index: {\n      type: Number,\n      default: 1\n    },\n    isClone: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\n    const currentSlide = inject('currentSlide', ref(0));\n    const slidesToScroll = inject('slidesToScroll', ref(0));\n    const isSliding = inject('isSliding', ref(false));\n    const isActive = () => props.index === currentSlide.value;\n    const isPrev = () => props.index === currentSlide.value - 1;\n    const isNext = () => props.index === currentSlide.value + 1;\n    const isVisible = () => {\n      const min = Math.floor(slidesToScroll.value);\n      const max = Math.ceil(slidesToScroll.value + config.itemsToShow - 1);\n      return props.index >= min && props.index <= max;\n    };\n    return () => {\n      var _a;\n      return h('li', {\n        style: {\n          width: `${100 / config.itemsToShow}%`\n        },\n        class: {\n          carousel__slide: true,\n          'carousel__slide--clone': props.isClone,\n          'carousel__slide--visible': isVisible(),\n          'carousel__slide--active': isActive(),\n          'carousel__slide--prev': isPrev(),\n          'carousel__slide--next': isNext(),\n          'carousel__slide--sliding': isSliding.value\n        },\n        'aria-hidden': !isVisible()\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\n    };\n  }\n});\nexport { Carousel, Icon, Navigation, Pagination, Slide };","map":{"version":3,"names":["Fragment","defineComponent","inject","ref","h","reactive","provide","onMounted","nextTick","onUnmounted","computed","watch","cloneVNode","defaultConfigs","itemsToShow","itemsToScroll","modelValue","transition","autoplay","snapAlign","wrapAround","throttle","pauseAutoplayOnHover","mouseDrag","touchDrag","dir","breakpoints","undefined","carouselProps","default","type","Number","Boolean","validator","value","includes","Object","settings","getMaxSlideIndex","config","slidesCount","Math","max","output","ceil","getMinSlideIndex","floor","getNumberInRange","val","min","getSlidesToScroll","currentSlide","getSlidesVNodes","vNode","reduce","acc","node","_a","children","name","mapNumberToRange","fn","limit","inThrottle","args","self","apply","setTimeout","debounce","delay","timerId","clearTimeout","ARIAComponent","setup","class","Carousel","props","slots","emit","expose","root","slides","slideWidth","assign","__defaultConfig","currentSlideIndex","prevSlideIndex","middleSlideIndex","maxSlideIndex","minSlideIndex","autoplayTimer","transitionTimer","initDefaultConfigs","bindConfigs","updateBreakpointsConfigs","keys","length","breakpointsArray","map","key","sort","a","b","newConfig","some","breakpoint","isMatched","window","matchMedia","matches","entries","forEach","handleWindowResize","updateSlideWidth","rect","getBoundingClientRect","width","updateSlidesData","initAutoplay","addEventListener","passive","clearInterval","removeEventListener","isTouch","startPosition","x","y","endPosition","dragged","isHover","isDragging","handleMouseEnter","handleMouseLeave","handleDragStart","event","target","tagName","preventDefault","button","isSliding","touches","clientX","clientY","document","handleDragging","handleDragEnd","deltaX","deltaY","direction","tolerance","sign","draggedSlides","round","captureClick","e","stopPropagation","slideTo","setInterval","next","resetAutoplay","slideIndex","currentVal","slidingToIndex","mappedNumber","prev","nav","slidesToScroll","trackStyle","xScroll","transform","margin","restartCarousel","prop","data","maxSlide","minSlide","middleSlide","slotSlides","slotAddons","addons","slotsProps","slidesElements","addonsElements","el","index","slidesBefore","isClone","slidesAfter","trackEl","style","onMousedownCapture","onTouchstartPassiveCapture","viewPortEl","carousel","tabindex","onMouseenter","onMouseleave","icons","arrowUp","arrowDown","arrowRight","arrowLeft","Icon","iconName","path","pathEl","d","iconTitle","title","titleEl","viewBox","role","ariaLabel","String","Navigation","attrs","slotNext","slotPrev","isRTL","prevButton","onClick","nextButton","Pagination","isActive","slide","item","push","Slide","isPrev","isNext","isVisible","carousel__slide","call"],"sources":["C:/Users/taich/Documents/GitHub/home/node_modules/vue3-carousel/dist/carousel.es.js"],"sourcesContent":["/**\n * Vue 3 Carousel 0.3.0\n * (c) 2023\n * @license MIT\n */\nimport { Fragment, defineComponent, inject, ref, h, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, cloneVNode } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    throttle: 16,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    dir: 'ltr',\r\n    breakpoints: undefined,\r\n};\n\nconst carouselProps = {\r\n    // count of items to showed per view\r\n    itemsToShow: {\r\n        default: defaultConfigs.itemsToShow,\r\n        type: Number,\r\n    },\r\n    // count of items to be scrolled\r\n    itemsToScroll: {\r\n        default: defaultConfigs.itemsToScroll,\r\n        type: Number,\r\n    },\r\n    // control infinite scrolling mode\r\n    wrapAround: {\r\n        default: defaultConfigs.wrapAround,\r\n        type: Boolean,\r\n    },\r\n    // control max drag\r\n    throttle: {\r\n        default: defaultConfigs.throttle,\r\n        type: Number,\r\n    },\r\n    // control snap position alignment\r\n    snapAlign: {\r\n        default: defaultConfigs.snapAlign,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n        },\r\n    },\r\n    // sliding transition time in ms\r\n    transition: {\r\n        default: defaultConfigs.transition,\r\n        type: Number,\r\n    },\r\n    // an object to store breakpoints\r\n    breakpoints: {\r\n        default: defaultConfigs.breakpoints,\r\n        type: Object,\r\n    },\r\n    // time to auto advance slides in ms\r\n    autoplay: {\r\n        default: defaultConfigs.autoplay,\r\n        type: Number,\r\n    },\r\n    // pause autoplay when mouse hover over the carousel\r\n    pauseAutoplayOnHover: {\r\n        default: defaultConfigs.pauseAutoplayOnHover,\r\n        type: Boolean,\r\n    },\r\n    // slide number number of initial slide\r\n    modelValue: {\r\n        default: undefined,\r\n        type: Number,\r\n    },\r\n    // toggle mouse dragging.\r\n    mouseDrag: {\r\n        default: defaultConfigs.mouseDrag,\r\n        type: Boolean,\r\n    },\r\n    // toggle mouse dragging.\r\n    touchDrag: {\r\n        default: defaultConfigs.touchDrag,\r\n        type: Boolean,\r\n    },\r\n    // control snap position alignment\r\n    dir: {\r\n        default: defaultConfigs.dir,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['rtl', 'ltr'].includes(value);\r\n        },\r\n    },\r\n    // an object to pass all settings\r\n    settings: {\r\n        default() {\r\n            return {};\r\n        },\r\n        type: Object,\r\n    },\r\n};\n\nfunction getMaxSlideIndex({ config, slidesCount }) {\r\n    const { snapAlign, wrapAround, itemsToShow = 1 } = config;\r\n    if (wrapAround) {\r\n        return Math.max(slidesCount - 1, 0);\r\n    }\r\n    let output;\r\n    switch (snapAlign) {\r\n        case 'start':\r\n            output = slidesCount - itemsToShow;\r\n            break;\r\n        case 'end':\r\n            output = slidesCount - 1;\r\n            break;\r\n        case 'center':\r\n        case 'center-odd':\r\n            output = slidesCount - Math.ceil((itemsToShow - 0.5) / 2);\r\n            break;\r\n        case 'center-even':\r\n            output = slidesCount - Math.ceil(itemsToShow / 2);\r\n            break;\r\n        default:\r\n            output = 0;\r\n            break;\r\n    }\r\n    return Math.max(output, 0);\r\n}\n\nfunction getMinSlideIndex({ config, slidesCount }) {\r\n    const { wrapAround, snapAlign, itemsToShow = 1 } = config;\r\n    let output = 0;\r\n    if (wrapAround || itemsToShow > slidesCount) {\r\n        return output;\r\n    }\r\n    switch (snapAlign) {\r\n        case 'start':\r\n            output = 0;\r\n            break;\r\n        case 'end':\r\n            output = itemsToShow - 1;\r\n            break;\r\n        case 'center':\r\n        case 'center-odd':\r\n            output = Math.floor((itemsToShow - 1) / 2);\r\n            break;\r\n        case 'center-even':\r\n            output = Math.floor((itemsToShow - 2) / 2);\r\n            break;\r\n        default:\r\n            output = 0;\r\n            break;\r\n    }\r\n    return output;\r\n}\n\nfunction getNumberInRange({ val, max, min }) {\r\n    if (max < min) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\n\nfunction getSlidesToScroll({ config, currentSlide, slidesCount }) {\r\n    const { snapAlign, wrapAround, itemsToShow = 1 } = config;\r\n    let output = currentSlide;\r\n    switch (snapAlign) {\r\n        case 'center':\r\n        case 'center-odd':\r\n            output -= (itemsToShow - 1) / 2;\r\n            break;\r\n        case 'center-even':\r\n            output -= (itemsToShow - 2) / 2;\r\n            break;\r\n        case 'end':\r\n            output -= itemsToShow - 1;\r\n            break;\r\n    }\r\n    if (wrapAround) {\r\n        return output;\r\n    }\r\n    return getNumberInRange({\r\n        val: output,\r\n        max: slidesCount - itemsToShow,\r\n        min: 0,\r\n    });\r\n}\n\nfunction getSlidesVNodes(vNode) {\r\n    if (!vNode)\r\n        return [];\r\n    return vNode.reduce((acc, node) => {\r\n        var _a;\r\n        if (node.type === Fragment) {\r\n            return [...acc, ...getSlidesVNodes(node.children)];\r\n        }\r\n        if (((_a = node.type) === null || _a === void 0 ? void 0 : _a.name) === 'CarouselSlide') {\r\n            return [...acc, node];\r\n        }\r\n        return acc;\r\n    }, []);\r\n}\n\nfunction mapNumberToRange({ val, max, min = 0 }) {\r\n    if (val > max) {\r\n        return mapNumberToRange({ val: val - (max + 1), max, min });\r\n    }\r\n    if (val < min) {\r\n        return mapNumberToRange({ val: val + (max + 1), max, min });\r\n    }\r\n    return val;\r\n}\n\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    if (!limit) {\r\n        return fn;\r\n    }\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\n\nvar ARIAComponent = defineComponent({\r\n    name: 'ARIA',\r\n    setup() {\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesCount = inject('slidesCount', ref(0));\r\n        return () => h('div', {\r\n            class: ['carousel__liveregion', 'carousel__sr-only'],\r\n            'aria-live': 'polite',\r\n            'aria-atomic': 'true',\r\n        }, `Item ${currentSlide.value + 1} of ${slidesCount.value}`);\r\n    },\r\n});\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: carouselProps,\r\n    setup(props, { slots, emit, expose }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(0);\r\n        // current config\r\n        const config = reactive(Object.assign({}, defaultConfigs));\r\n        // default carousel configs\r\n        let __defaultConfig = Object.assign({}, defaultConfigs);\r\n        // breakpoints configs\r\n        let breakpoints;\r\n        // slides\r\n        const currentSlideIndex = ref((_a = props.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        let autoplayTimer;\r\n        let transitionTimer;\r\n        provide('config', config);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        provide('slideWidth', slideWidth);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            breakpoints = Object.assign({}, props.breakpoints);\r\n            __defaultConfig = Object.assign(Object.assign(Object.assign({}, __defaultConfig), props), { breakpoints: undefined });\r\n            bindConfigs(__defaultConfig);\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            if (!breakpoints || !Object.keys(breakpoints).length)\r\n                return;\r\n            const breakpointsArray = Object.keys(breakpoints)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, __defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints[breakpoint]);\r\n                }\r\n                return isMatched;\r\n            });\r\n            bindConfigs(newConfig);\r\n        }\r\n        function bindConfigs(newConfig) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            Object.entries(newConfig).forEach(([key, val]) => (config[key] = val));\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            updateBreakpointsConfigs();\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex({ config, slidesCount: slidesCount.value });\r\n            minSlideIndex.value = getMinSlideIndex({ config, slidesCount: slidesCount.value });\r\n            if (!config.wrapAround) {\r\n                currentSlideIndex.value = getNumberInRange({\r\n                    val: currentSlideIndex.value,\r\n                    max: maxSlideIndex.value,\r\n                    min: minSlideIndex.value,\r\n                });\r\n            }\r\n        }\r\n        onMounted(() => {\r\n            nextTick(() => updateSlideWidth());\r\n            // Overcome some edge cases\r\n            setTimeout(() => updateSlideWidth(), 1000);\r\n            updateBreakpointsConfigs();\r\n            initAutoplay();\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n            emit('init');\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer) {\r\n                clearTimeout(transitionTimer);\r\n            }\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n            }\r\n            window.removeEventListener('resize', handleWindowResize, {\r\n                passive: true,\r\n            });\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isHover = ref(false);\r\n        const isDragging = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        function handleDragStart(event) {\r\n            if (['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName)) {\r\n                return;\r\n            }\r\n            isTouch = event.type === 'touchstart';\r\n            if (!isTouch) {\r\n                event.preventDefault();\r\n            }\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        const handleDragging = throttle((event) => {\r\n            isDragging.value = true;\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, config.throttle);\r\n        function handleDragEnd() {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\r\n            // Prevent clicking if there is clicked slides\r\n            if (draggedSlides && !isTouch) {\r\n                const captureClick = (e) => {\r\n                    e.stopPropagation();\r\n                    window.removeEventListener('click', captureClick, true);\r\n                };\r\n                window.addEventListener('click', captureClick, true);\r\n            }\r\n            slideTo(currentSlideIndex.value - draggedSlides);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            isDragging.value = false;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initAutoplay() {\r\n            if (!config.autoplay || config.autoplay <= 0) {\r\n                return;\r\n            }\r\n            autoplayTimer = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplay() {\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n                autoplayTimer = null;\r\n            }\r\n            initAutoplay();\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex) {\r\n            const currentVal = config.wrapAround\r\n                ? slideIndex\r\n                : getNumberInRange({\r\n                    val: slideIndex,\r\n                    max: maxSlideIndex.value,\r\n                    min: minSlideIndex.value,\r\n                });\r\n            if (currentSlideIndex.value === currentVal || isSliding.value) {\r\n                return;\r\n            }\r\n            emit('slide-start', {\r\n                slidingToIndex: slideIndex,\r\n                currentSlideIndex: currentSlideIndex.value,\r\n                prevSlideIndex: prevSlideIndex.value,\r\n                slidesCount: slidesCount.value,\r\n            });\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = currentVal;\r\n            transitionTimer = setTimeout(() => {\r\n                if (config.wrapAround) {\r\n                    const mappedNumber = mapNumberToRange({\r\n                        val: currentVal,\r\n                        max: maxSlideIndex.value,\r\n                        min: 0,\r\n                    });\r\n                    if (mappedNumber !== currentSlideIndex.value) {\r\n                        currentSlideIndex.value = mappedNumber;\r\n                        emit('loop', {\r\n                            currentSlideIndex: currentSlideIndex.value,\r\n                            slidingToIndex: slideIndex,\r\n                        });\r\n                    }\r\n                }\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n                emit('slide-end', {\r\n                    currentSlideIndex: currentSlideIndex.value,\r\n                    prevSlideIndex: prevSlideIndex.value,\r\n                    slidesCount: slidesCount.value,\r\n                });\r\n                isSliding.value = false;\r\n                resetAutoplay();\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            slideTo(currentSlideIndex.value + config.itemsToScroll);\r\n        }\r\n        function prev() {\r\n            slideTo(currentSlideIndex.value - config.itemsToScroll);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        provide('isSliding', isSliding);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => getSlidesToScroll({\r\n            config,\r\n            currentSlide: currentSlideIndex.value,\r\n            slidesCount: slidesCount.value,\r\n        }));\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const xScroll = slidesToScroll.value * slideWidth.value * direction;\r\n            return {\r\n                transform: `translateX(${dragged.x - xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n                margin: config.wrapAround ? `0 -${slidesCount.value * slideWidth.value}px` : '',\r\n                width: `100%`,\r\n            };\r\n        });\r\n        function restartCarousel() {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlideWidth();\r\n            resetAutoplay();\r\n        }\r\n        // Update the carousel on props change\r\n        Object.keys(carouselProps).forEach((prop) => {\r\n            if (['modelValue'].includes(prop))\r\n                return;\r\n            watch(() => props[prop], restartCarousel);\r\n        });\r\n        // Handle changing v-model value\r\n        watch(() => props['modelValue'], (val) => {\r\n            if (val === currentSlideIndex.value) {\r\n                return;\r\n            }\r\n            slideTo(Number(val));\r\n        });\r\n        // Handel when slides added/removed\r\n        watch(slidesCount, updateSlidesData);\r\n        // Init carousel\r\n        emit('before-init');\r\n        initDefaultConfigs();\r\n        const data = {\r\n            config,\r\n            slidesCount,\r\n            slideWidth,\r\n            next,\r\n            prev,\r\n            slideTo,\r\n            currentSlide: currentSlideIndex,\r\n            maxSlide: maxSlideIndex,\r\n            minSlide: minSlideIndex,\r\n            middleSlide: middleSlideIndex,\r\n        };\r\n        expose({\r\n            updateBreakpointsConfigs,\r\n            updateSlidesData,\r\n            updateSlideWidth,\r\n            initDefaultConfigs,\r\n            restartCarousel,\r\n            slideTo,\r\n            next,\r\n            prev,\r\n            nav,\r\n            data,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        const slotsProps = reactive(data);\r\n        return () => {\r\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            let output = slidesElements;\r\n            if (config.wrapAround) {\r\n                const slidesBefore = slidesElements.map((el, index) => cloneVNode(el, {\r\n                    index: -slidesElements.length + index,\r\n                    isClone: true,\r\n                    key: `clone-before-${index}`,\r\n                }));\r\n                const slidesAfter = slidesElements.map((el, index) => cloneVNode(el, {\r\n                    index: slidesElements.length + index,\r\n                    isClone: true,\r\n                    key: `clone-after-${index}`,\r\n                }));\r\n                output = [...slidesBefore, ...slidesElements, ...slidesAfter];\r\n            }\r\n            slides.value = slidesElements;\r\n            slidesCount.value = Math.max(slidesElements.length, 1);\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedownCapture: config.mouseDrag ? handleDragStart : null,\r\n                onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\r\n            }, output);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: {\r\n                    carousel: true,\r\n                    'is-sliding': isSliding.value,\r\n                    'is-dragging': isDragging.value,\r\n                    'is-hover': isHover.value,\r\n                    'carousel--rtl': config.dir === 'rtl',\r\n                },\r\n                dir: config.dir,\r\n                'aria-label': 'Gallery',\r\n                tabindex: '0',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements, h(ARIAComponent)]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    const iconTitle = (props.title || iconName);\r\n    const titleEl = h('title', iconTitle);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n        ariaLabel: iconTitle,\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots || {};\r\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const { dir, wrapAround } = config;\r\n    const isRTL = dir === 'rtl';\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__prev',\r\n            !wrapAround && currentSlide.value <= minSlide.value && 'carousel__prev--disabled',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: isRTL ? 'arrowRight' : 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__next',\r\n            !wrapAround && currentSlide.value >= maxSlide.value && 'carousel__next--disabled',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: isRTL ? 'arrowLeft' : 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const isActive = (slide) => mapNumberToRange({\r\n        val: currentSlide.value,\r\n        max: maxSlide.value,\r\n        min: 0,\r\n    }) === slide;\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => nav.slideTo(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n        isClone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const isSliding = inject('isSliding', ref(false));\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isPrev = () => props.index === currentSlide.value - 1;\r\n        const isNext = () => props.index === currentSlide.value + 1;\r\n        const isVisible = () => {\r\n            const min = Math.floor(slidesToScroll.value);\r\n            const max = Math.ceil(slidesToScroll.value + config.itemsToShow - 1);\r\n            return props.index >= min && props.index <= max;\r\n        };\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: { width: `${100 / config.itemsToShow}%` },\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel__slide--clone': props.isClone,\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                    'carousel__slide--sliding': isSliding.value,\r\n                },\r\n                'aria-hidden': !isVisible(),\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}