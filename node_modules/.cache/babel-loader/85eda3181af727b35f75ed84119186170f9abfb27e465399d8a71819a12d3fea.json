{"ast":null,"code":"import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport Firebase from \"../../firebase_settings/index.js\";\nconst db = Firebase.db;\nexport default {\n  receive_radarData() {\n    /*const usersCollectionRef = collection(db, 'iidxRadarData');\r\n    getDocs(usersCollectionRef).then((documentSnapshot) => {\r\n        var tempDict = {};\r\n        documentSnapshot.docs.forEach((doc) => {\r\n            tempDict[doc.data()[\"TITLE\"]]=doc.data();\r\n        });\r\n        return tempDict;\r\n    });*/\n  },\n  receive_userData(uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        console.log('Document data:', documentSnapshot.data());\n      } else {\n        console.log('Document does not exist!');\n      }\n    });\n  },\n  send_userData(data, uid) {\n    const docRef = doc(db, 'userData', uid);\n    getDoc(docRef).then(documentSnapshot => {\n      if (documentSnapshot.exists()) {\n        updateDoc(docRef, data).then(() => {\n          console.log(\"Document successfully update!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        setDoc(docRef, data).then(() => {\n          console.log(\"Document successfully written!\");\n        }).catch(error => {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["doc","getDoc","setDoc","updateDoc","Firebase","db","receive_radarData","receive_userData","uid","docRef","then","documentSnapshot","exists","console","log","data","send_userData","catch","error"],"sources":["C:/Users/taich/Documents/GitHub/home/src/components/iidxradarparts/calcRadarScore.js"],"sourcesContent":["import { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport Firebase from \"../../firebase_settings/index.js\";\r\n\r\nconst db = Firebase.db;\r\n\r\nexport default {\r\n    receive_radarData() {\r\n        /*const usersCollectionRef = collection(db, 'iidxRadarData');\r\n        getDocs(usersCollectionRef).then((documentSnapshot) => {\r\n            var tempDict = {};\r\n            documentSnapshot.docs.forEach((doc) => {\r\n                tempDict[doc.data()[\"TITLE\"]]=doc.data();\r\n            });\r\n            return tempDict;\r\n        });*/\r\n    },\r\n\r\n    receive_userData(uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                console.log('Document data:', documentSnapshot.data());\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        });\r\n    },\r\n\r\n    send_userData(data, uid) {\r\n        const docRef = doc(db, 'userData', uid);\r\n        getDoc(docRef).then((documentSnapshot) => {\r\n            if (documentSnapshot.exists()) {\r\n                updateDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully update!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            } else {\r\n                setDoc(docRef, data)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully written!\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error writing document: \", error);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACnE,OAAOC,QAAQ,MAAM,kCAAkC;AAEvD,MAAMC,EAAE,GAAGD,QAAQ,CAACC,EAAE;AAEtB,eAAe;EACXC,iBAAiBA,CAAA,EAAG;IAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;EAPQ,CAQH;EAEDC,gBAAgBA,CAACC,GAAG,EAAE;IAClB,MAAMC,MAAM,GAAGT,GAAG,CAACK,EAAE,EAAE,UAAU,EAAEG,GAAG,CAAC;IACvCP,MAAM,CAACQ,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,gBAAgB,CAACI,IAAI,EAAE,CAAC;MAC1D,CAAC,MAAM;QACHF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EAEDE,aAAaA,CAACD,IAAI,EAAEP,GAAG,EAAE;IACrB,MAAMC,MAAM,GAAGT,GAAG,CAACK,EAAE,EAAE,UAAU,EAAEG,GAAG,CAAC;IACvCP,MAAM,CAACQ,MAAM,CAAC,CAACC,IAAI,CAAEC,gBAAgB,IAAK;MACtC,IAAIA,gBAAgB,CAACC,MAAM,EAAE,EAAE;QAC3BT,SAAS,CAACM,MAAM,EAAEM,IAAI,CAAC,CAClBL,IAAI,CAAC,MAAM;UACRG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAChD,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;UACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV,CAAC,MAAM;QACHhB,MAAM,CAACO,MAAM,EAAEM,IAAI,CAAC,CACfL,IAAI,CAAC,MAAM;UACRG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;UACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,CAAC;MACV;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}